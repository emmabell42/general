# Check the alignment scores of the trimmed fastq files
nice R
logs <- list.files()[grep(".log",list.files())]
alignmentRates <- cbind(logs,NA)
for(i in 1:length(logs)){
log <- read.delim(logs[i],head=F)
cat(nrow(log),"\n") # Make sure every log has 6 lines
assign(logs[i],log)
alignmentRates[i,2] <- strsplit(as.character(log[6,])," ")[[1]][1]
}
#> alignmentRates
#      logs
# [1,] "SRR1576362.log" "11.52%" Oct4
# [2,] "SRR1576363.log" "10.19%" Oct4
# [3,] "SRR1576404.log" "12.20%" Sox2 (one of several)
# How much does the alignment improve if I merge the fastq files first?
# I'm missing the SRP002/SRP002512/ files...
cd /data/emmabell42/seq/Shuchen
echo "SRR049932/SRR049932
SRR049933/SRR049933
SRR049934/SRR049934
SRR049935/SRR049935" > toDownload2
#!/bin/bash
baseDir="http://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP002/SRP002512/"
while read LINE
do
        wget -r wget -r --no-parent $baseDir$LINE.sra
done < toDownload2
echo "SRR049932/SRR049932
SRR049933/SRR049933
SRR049934/SRR049934
SRR049935/SRR049935" > toDownload2
# Moved the directories generated into the previously generated sra directory
cd /data/emmabell42/seq/Shuchen/sra/ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy
find /data/emmabell42/seq/Shuchen/sra/ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/ -name "*.sra" | while read LINE
do
        /data/seqtools/sratoolkit.2.4.2-centos_linux64/bin/fastq-dump.2.4.2 $LINE
done
for file in *.fastq; do /data/seqtools/FastQC/fastqc $file; done;
#
## Get the over-represented sequences from the FastQC html files via R
#
nice R
library(XML)
library(GenomicRanges)
library(ShortRead)
overrepresented <- c()
htmlFiles <- list.files()[grep(".html",list.files())]
for(i in 1:length(htmlFiles)){
tables <- readHTMLTable(htmlFiles[i])
contents <- unlist(lapply(tables,function(x) "Possible Source" %in% colnames(x)))
lengthContents <- length(grep(TRUE,contents))
	if(lengthContents>0) 
	{ 
	tmp <- as.character(tables[[grep(TRUE,contents)]][,1])
	overrepresented <- c(overrepresented,tmp)
	}
}
overrepresented <- overrepresented[!duplicated(overrepresented)]
names(overrepresented) <- paste0("Overrepresented",1:length(overrepresented))
overrepresented <- DNAStringSet(overrepresented)
writeFasta(overrepresented,"overrepresented.fa")
q()
n
#
## Run Trimmomatic
#
for file in *.fastq; 
do 
java -jar /data/seqtools/Trimmomatic-0.33/trimmomatic-0.33.jar SE -threads 12 -phred33 $file "`basename "$file" .fastq `.trimmed" ILLUMINACLIP:overrepresented.fa:2:30:10 LEADING:20 TRAILING:20 SLIDINGWINDOW:4:20 MINLEN:20;
done 
#
## Repeat FastQC
#
for file in *.trimmed; do /data/seqtools/FastQC/fastqc "$file" --threads 12; done; 
for file in *.trimmed_fastqc.zip; do unzip "$file"; done;
find . -name *summary.txt > ./summaries.txt
#
## Read in FastQC HTML files and report any errors
#
nice R
summaries <- read.table("summaries.txt",stringsAsFactors=F)
summaries <- apply(summaries,1,function(x) substr(x,2,47))
toName <- c()
toName <- apply(summaries,1,function(x) substr(x,2,12))
summaryTable <- c()
for(i in 1:length(summaries)){
toRead <- paste0(getwd(),summaries[i])
summary <- read.table(toRead,sep="\t")
summaryTable <- rbind(summaryTable,summary)
}
summaryTable <- summaryTable[which(!summaryTable[,1]=="PASS"),]
table(summaryTable[,2])
#
## Align with Bowtie2
#
export BOWTIE2_INDEXES=/data/seqtools/genomes/hg19/
find . -name "*.trimmed" | while read filename; 
do 
/data/seqtools/bowtie2-2.2.3/bowtie2 -x hg19 -U $filename 1> "`basename "$filename" .trimmed`.sam" 2> "`basename "$filename" .trimmed`.log" -p 8;
samtools view -bS "`basename "$filename" .trimmed`.sam" > "`basename "$filename" .trimmed`.bam";
done
#> alignmentRates - fine.
#     logs
#[1,] "SRR049932.log" "81.54%"
#[2,] "SRR049933.log" "74.26%"
#[3,] "SRR049934.log" "76.40%"
#[4,] "SRR049935.log" "72.35%"
#
## Peak calling with MACS2
#
inputs <- cbind(name=c("GSE21916_hESC_Oct4","GSE69479_hESC_Sox2","GSE49404_hNPC_Sox2","GSE69479_hNPC_Sox2"),ip=c("SRR049933.bam SRR049934.bam SRR049935.bam","SRR2049332.bam","SRR945976.bam","SRR2049336.bam"),input=c("SRR049932.bam","SRR2049334.bam SRR2049335.bam","SRR945975.bam","SRR2049338.bam"))
write.table(inputs,"inputs.txt",sep=",",quote=F,col.names=F,row.names=F)
q()
n
cd ./bam
while read LINE;
do
name=`echo $LINE | cut -f 1 -d ","`
treatment=`echo $LINE | cut -f 2 -d ","`
control=`echo $LINE | cut -f 3 -d ","`
macs2 callpeak -t $treatment -c $control -n $name -f BAM -g hs -B; 
done < inputs.txt
for FILE in *.r
do
Rscript $FILE
done
nice R
peaks <- list.files()[grep("narrowPeak",list.files())]
for(i in 1:length(peaks)){
reading <- read.table(peaks[i],stringsAsFactors=F)
assign(peaks[i],reading)
cat(peaks[i],nrow(reading),"\n")
}
q()
n
macs2 callpeak -t SRR945976.bam -c SRR945975.bam -n GSE49404_hNPC_Sox2_nomodel -f BAM -g hs -B --nomodel --extsize 250 
#
## Assigning peaks to genomic regions
#
cd /data/emmabell42/seq/Shuchen/bam/
PATH=$PATH:/data/seqtools/homer/bin/ 
find . -name '*.broadPeak' | while read FILE 
do
annotatePeaks.pl $FILE hg19 > "`basename "$FILE" .broadPeak `_annotation.txt"
done
#
nice R
annotations <- list.files()[grep("_annotation.txt",list.files())]
for(i in 1:length(annotations)){
reading <- read.table(annotations[i],head=T,sep="\t",comment.char="",quote="",stringsAsFactors=F)
reading$Annotation[grep("intron",reading$Annotation)] <- "intron"
reading$Annotation[grep("promoter-TSS",reading$Annotation)] <- "promoter-TSS"
reading$Annotation[grep("exon",reading$Annotation)] <- "exon"
reading$Annotation[grep("non-coding",reading$Annotation)] <- "non-coding"
reading$Annotation[grep("TTS",reading$Annotation)] <- "TTS"
cat(annotations[i]," ",table(reading$Annotation),"\n")
assign(annotations[i],reading)
}
#
## Intersect narrowPeak files with hg19 chromosome sizes
#
find . -name '*.narrowPeak' | while read FILE
do
bedtools intersect -a $FILE \
                   -b /data/emmabell42/resources/hg19.chrom.sizes.txt > "`basename "$FILE" .narrowPeak `_narrowPeak.trimmed"
done
#
## Download replacement Oct4 and histone modification ChIP-seq datasets
#
echo "SRX/SRX100/SRX100409/SRR351565/SRR351565
SRX/SRX100/SRX100483/SRR351704/SRR351704
SRX/SRX100/SRX100483/SRR351705/SRR351705
SRX/SRX105/SRX1053378/SRR2056023/SRR2056023
SRX/SRX105/SRX1053379/SRR2056024/SRR2056024
SRX/SRX105/SRX1053375/SRR2056020/SRR2056020
SRX/SRX105/SRX1053371/SRR2056016/SRR2056016
SRX/SRX105/SRX1053372/SRR2056017/SRR2056017
SRX/SRX729/SRX729673/SRR1608982/SRR1608982
SRX/SRX729/SRX729678/SRR1608987/SRR1608987
SRX/SRX729/SRX729674/SRR1608983/SRR1608983
SRX/SRX729/SRX729679/SRR1608988/SRR1608988
SRX/SRX729/SRX729675/SRR1608984/SRR1608984
SRX/SRX729/SRX729680/SRR1608989/SRR1608989
SRX/SRX729/SRX729676/SRR1608985/SRR1608985
SRX/SRX729/SRX729681/SRR1608990/SRR1608990
SRX/SRX729/SRX729682/SRR1608991/SRR1608991
SRX/SRX729/SRX729687/SRR1608996/SRR1608996
SRX/SRX729/SRX729683/SRR1608992/SRR1608992
SRX/SRX729/SRX729688/SRR1608997/SRR1608997
SRX/SRX729/SRX729684/SRR1608993/SRR1608993
SRX/SRX729/SRX729689/SRR1608998/SRR1608998
SRX/SRX729/SRX729677/SRR1608986/SRR1608986
SRX/SRX729/SRX729686/SRR1608995/SRR1608995
SRX/SRX729/SRX729685/SRR1608994/SRR1608994
SRX/SRX729/SRX729690/SRR1608999/SRR1608999
SRX/SRX027/SRX027484/SRR067372/SRR067372
SRX/SRX027/SRX027485/SRR067373/SRR067373
SRX/SRX027/SRX027486/SRR067374/SRR067374
SRX/SRX027/SRX027487/SRR067375/SRR067375
SRX/SRX027/SRX027483/SRR067371/SRR067371
SRX/SRX027/SRX027492/SRR067380/SRR067380
SRX/SRX027/SRX027493/SRR067381/SRR067381
SRX/SRX027/SRX027494/SRR067382/SRR067382
SRX/SRX027/SRX027495/SRR067383/SRR067383
SRX/SRX027/SRX027491/SRR067379/SRR067379" > toDownload
#!/bin/bash
baseDir="ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByExp/sra/"
while read LINE
do
        wget -r wget -r --no-parent $baseDir$LINE.sra
done < toDownload
#
find . -name "*.sra" | while read LINE
do
        /data/seqtools/sratoolkit.2.4.2-centos_linux64/bin/fastq-dump.2.4.2 $LINE
done
for file in *.fastq; do /data/seqtools/FastQC/fastqc $file --threads 8; done;
#
## Review alignment rates
#
nice R
logs <- list.files()[grep(".log",list.files())]
overall <- c()
for(i in 1:length(logs)){
tmp <- read.delim(logs[i],sep="\n",head=F,stringsAsFactors=F)
assign(logs[i],tmp)
#cat(nrow(tmp),"\n") #make sure = 6
print(tmp[6,])
}
[1] "98.94% overall alignment rate"
[1] "98.42% overall alignment rate"
[1] "98.95% overall alignment rate"
[1] "98.85% overall alignment rate"
[1] "99.35% overall alignment rate"
[1] "98.42% overall alignment rate"
[1] "98.57% overall alignment rate"
[1] "99.40% overall alignment rate"
[1] "98.76% overall alignment rate"
[1] "99.23% overall alignment rate"
[1] "99.76% overall alignment rate"
[1] "98.77% overall alignment rate"
[1] "99.73% overall alignment rate"
[1] "99.32% overall alignment rate"
[1] "99.53% overall alignment rate"
[1] "99.51% overall alignment rate"
[1] "99.28% overall alignment rate"
[1] "99.53% overall alignment rate"
[1] "99.26% overall alignment rate"
[1] "99.65% overall alignment rate"
[1] "99.27% overall alignment rate"
[1] "99.68% overall alignment rate"
[1] "99.22% overall alignment rate"
[1] "99.53% overall alignment rate"
[1] "100.00% overall alignment rate"
[1] "99.26% overall alignment rate"
[1] "99.38% overall alignment rate"
[1] "99.99% overall alignment rate"
[1] "96.61% overall alignment rate"
[1] "96.63% overall alignment rate"
[1] "95.74% overall alignment rate"
[1] "90.34% overall alignment rate"
[1] "89.99% overall alignment rate"
[1] "97.56% overall alignment rate"
[1] "98.00% overall alignment rate"
[1] "96.58% overall alignment rate"
#
## Peak calling with MACS2
#
nice R
inputs <- rbind(
#c("GSE32465_hESC_Oct4_nomodel","SRR351704 SRR351705","SRR351565"), 
#c("GSE69646_hESC_Oct4","SRR2056023 SRR2056024","SRR2056020"),
c("GSE69646_hESC_H3K27ac","SRR2056016 SRR2056017","SRR2056020"),
c("GSE62193_hESC_H3K27ac","SRR1608982 SRR1608987","SRR1608986"),
c("GSE62193_hESC_H3K27me3_nomodel","SRR1608983 SRR1608988","SRR1608986"),
c("GSE62193_hESC_H3K4me1_nomodel","SRR1608984 SRR1608989","SRR1608986"),
c("GSE62193_hESC_H3K4me3","SRR1608985 SRR1608990","SRR1608986"),
c("GSE62193_hNPC_H3K27ac","SRR1608991 SRR1608996","SRR1608995"),
c("GSE62193_hNPC_H3K27me3_nomodel","SRR1608992 SRR1608997","SRR1608995"),
c("GSE62193_hNPC_H3K4me1_nomodel","SRR1608993 SRR1608998","SRR1608995"),
c("GSE62193_hNPC_H3K4me3","SRR1608994 SRR1608999","SRR1608995"),
c("GSE24447_hESC_H3K27ac","SRR067373","SRR067371"),
c("GSE24447_hESC_H3K27me3","SRR067372","SRR067371"),
c("GSE24447_hESC_H3K4me1","SRR067374","SRR067371"),
c("GSE24447_hESC_H3K4me3","SRR067375","SRR067371"),
c("GSE24447_hNPC_H3K27ac","SRR067381","SRR067379"),
c("GSE24447_hNPC_H3K27me3","SRR067380","SRR067379"),
c("GSE24447_hNPC_H3K4me1","SRR067382","SRR067379"),
c("GSE24447_hNPC_H3K4me3","SRR067383","SRR067379")
)

inputs <- rbind(
c("GSE62193_hESC_H3K27me3","SRR1608983 SRR1608988","SRR1608986"),
c("GSE62193_hESC_H3K4me1","SRR1608984 SRR1608989","SRR1608986"),
c("GSE62193_hNPC_H3K27me3","SRR1608992 SRR1608997","SRR1608995"),
c("GSE62193_hNPC_H3K4me1","SRR1608993 SRR1608998","SRR1608995"))

inputs <- cbind(inputs,"--broad","")
inputs[grep("nomodel",inputs[,1]),5] <- "--nomodel --extsize 225"
colnames(inputs) <- c("Name","IP","Input","Broad","Model")
inputs[,2] <- paste0(inputs[,2],".bam")
inputs[,3] <- paste0(inputs[,3],".bam")
inputs[,2] <- gsub(" ",".bam ",inputs[,2])
write.table(inputs,"inputs.txt",sep=",",quote=F,col.names=F,row.names=F)
q()
n
while read LINE;
do
name=`echo $LINE | cut -f 1 -d ","`
treatment=`echo $LINE | cut -f 2 -d ","`
control=`echo $LINE | cut -f 3 -d ","`
broad=`echo $LINE | cut -f 4 -d ","`
model=`echo $LINE | cut -f 5 -d ","`
macs2 callpeak -t $treatment -c $control -n $name -f BAM $broad -g hs -B $model
done < inputs.txt

for FILE in *.r
do
Rscript $FILE
done
nice R
peaks <- list.files()[grep("broadPeak",list.files())]
for(i in 1:length(peaks)){
reading <- read.table(peaks[i],stringsAsFactors=F)
assign(peaks[i],reading)
cat(peaks[i],nrow(reading),"\n")
}
q()
n

macs2 callpeak -t SRR945976.bam -c SRR945975.bam -n GSE49404_hNPC_Sox2_nomodel -f BAM -g hs -B --nomodel --extsize 250 

nice R
peaks <- list.files()[grep("narrowPeak",list.files())]
for(i in c(1:20,22:length(peaks))){
tmp <- read.table(peaks[i],sep="\t",head=F,stringsAsFactors=F)
cat(peaks[i]," ",nrow(tmp),"\n")
assign(peaks[i],tmp)
}
#
## Overlapping peaks
#
nice R
library(GenomicRanges)
path <- paste0(getwd(),"/",list.files(recursive=T)[grep("annotation.txt",list.files(recursive=T))])
toName <- gsub("_annotation.txt","",list.files(recursive=T)[grep("annotation.txt",list.files(recursive=T))])
toName <- gsub("MACS2/","",toName)
for(i in 1:length(path)){
reading <- read.table(path[i],sep="\t",head=T,comment.char="",quote="",stringsAsFactors=F)
reading$Annotation[grep("intron",reading$Annotation)] <- "intron"
reading$Annotation[grep("promoter-TSS",reading$Annotation)] <- "promoter-TSS"
reading$Annotation[grep("exon",reading$Annotation)] <- "exon"
reading$Annotation[grep("non-coding",reading$Annotation)] <- "non-coding"
reading$Annotation[grep("TTS",reading$Annotation)] <- "TTS"
cat(toName[i]," ",table(reading$Annotation),"\n")
reading.gr <- with(reading,GRanges(reading[,2],IRanges(reading[,3],reading[,4])))
mcols(reading.gr,use.names=T) <- cbind(reading[,1],reading[,8],reading[,16])
assign(toName[i],reading)
assign(paste0(toName[i],".gr"),reading.gr)
}
toSubset <- c("GSE24447_hESC_H3K27me3_peaks.gr","GSE24447_hESC_H3K4me1_peaks.gr","GSE24447_hESC_H3K4me3_peaks.gr")
for(i in 1:3){
subsetting <- subsetByOverlaps(get(toSubset[i]),GSE24447_hESC_H3K27ac_peaks.gr)
assign(gsub(".gr",".ss",toSubset[i]),subsetting)
}
library(ChIPpeakAnno)
library(limma)
res <- makeVennDiagram(Peaks=list(GSE24447_hESC_H3K27me3_peaks.ss,GSE24447_hESC_H3K4me1_peaks.ss,GSE24447_hESC_H3K4me3_peaks.ss),NameOfPeaks=c("H3K27me3", "H3K4me1","H3K4me3"))
png("ESC_histonemods.png")
vennDiagram(res[[2]])
dev.off()

#Define enhancers
gr.obs <- ls()[grep(".gr",ls())]
gr.obs <- gr.obs[c(2:9,26:27,29,30)]
h3k27ac_hesc <- array(NA,dim=c(length(GSE24447_hESC_H3K27ac_peaks.gr),length(gr.obs)))
colnames(h3k27ac_hesc) <- gr.obs
h3k27ac_hnpc <- array(NA,dim=c(length(GSE24447_hNPC_H3K27ac_peaks.gr),length(gr.obs)))
colnames(h3k27ac_hnpc) <- gr.obs
for(i in 1:length(gr.obs)){
h3k27ac_hesc[,i] <- countOverlaps(GSE24447_hESC_H3K27ac_peaks.gr,get(gr.obs[i]))
h3k27ac_hesc[which(h3k27ac_hesc[,i]>1),i] <- 1
h3k27ac_hnpc[,i] <- countOverlaps(GSE24447_hNPC_H3K27ac_peaks.gr,get(gr.obs[i]))
h3k27ac_hnpc[which(h3k27ac_hnpc[,i]>1),i] <- 1
}
h3k27ac_hesc <- h3k27ac_hesc[,2:12]
h3k27ac_hnpc <- h3k27ac_hnpc[,c(1:4,6:12)]
cm.hesc <- cor(h3k27ac_hesc)
cm.hnpc <- cor(h3k27ac_hnpc)
dendro.hesc <- hclust(as.dist(1-cm.hesc))
dendro.hnpc <- hclust(as.dist(1-cm.hnpc))
library(gplots)
png("hesc_corr_heatmap.png")
heatmap.2(as.matrix(cm.hesc),trace="none",col=bluered(100),symkey=T,Rowv=as.dendrogram(dendro.hesc),Colv=as.dendrogram(dendro.hesc))
dev.off()
hescEnhancers <- which(h3k27ac_hesc[,2]==1 & h3k27ac_hesc[,1]==0 & h3k27ac_hesc[,3]==0)
hnpcEnhancers <- which(h3k27ac_hnpc[,2]==1 & h3k27ac_hnpc[,1]==0 & h3k27ac_hnpc[,3]==0)
write.table(GSE24447_hESC_H3K27ac_peaks[hescEnhancers,2:4],"hESC_enhancers.bed",sep="\t",quote=F,row.names=F,col.names=F)
write.table(GSE24447_hNPC_H3K27ac_peaks[hnpcEnhancers,2:4],"hNPC_enhancers.bed",sep="\t",quote=F,row.names=F,col.names=F)
library(limma)
png("hescEnhancers_wide_venn.png")
vennDiagram(hescEnhancers)
dev.off()
png("hnpcEnhancers_wide_venn.png")
vennDiagram(hnpcEnhancers)
dev.off()
# Using 88 (median) as the cut-off, define low and high H3K4me1 peaks
GSE24447_hESC_H3K4me1.low <- with(GSE24447_hESC_H3K4me1[which(GSE24447_hESC_H3K4me1[,6]<88),], GRanges(Chr, IRanges(start=Start-100, end=End+100)))
GSE24447_hESC_H3K4me1.high <- with(GSE24447_hESC_H3K4me1[which(GSE24447_hESC_H3K4me1[,6]>88),], GRanges(Chr, IRanges(start=Start-100, end=End+100)))
GSE24447_hNPC_H3K4me1.low <- with(GSE24447_hESC_H3K4me1[which(GSE24447_hESC_H3K4me1[,6]<88),],GRanges(Chr, IRanges(start=Start-100, end=End+100)))
GSE24447_hNPC_H3K4me1.high <- with(GSE24447_hESC_H3K4me1[which(GSE24447_hESC_H3K4me1[,6]>88),], GRanges(Chr, IRanges(start=Start-100, end=End+100)))
hescEnhancers.low <- array(NA,dim=c(length(GSE24447_hESC_H3K4me1.low),3))
hescEnhancers.high <- array(NA,dim=c(length(GSE24447_hESC_H3K4me1.high),3))
hnpcEnhancers.low <- array(NA,dim=c(length(GSE24447_hNPC_H3K4me1.low),3))
hnpcEnhancers.high <- array(NA,dim=c(length(GSE24447_hNPC_H3K4me1.high),3))
colnames(hescEnhancers.low) <- c("Sox2","Oct4","H3K27ac")
colnames(hescEnhancers.high) <- c("Sox2","Oct4","H3K27ac")
colnames(hnpcEnhancers.low) <- c("Sox2","Pax6","H3K27ac")
colnames(hnpcEnhancers.high) <- c("Sox2","Pax6","H3K27ac")
hescs <- c("GSE69479_hESC_Sox2.gr.wide","GSE69646_hESC_Oct4.gr.wide","GSE24447_hESC_H3K27ac.gr.wide")
hnpcs <- c("GSE49404_hNPC_Sox2_nomodel.gr.wide","Pax6.homer.gr.wide","GSE24447_hNPC_H3K27ac.gr.wide")
for(i in 1:3){
hescEnhancers.low[,i] <- countOverlaps(GSE24447_hESC_H3K4me1.low,get(hescs[i]))
hescEnhancers.high[,i] <- countOverlaps(GSE24447_hESC_H3K4me1.high,get(hescs[i]))
hnpcEnhancers.low[,i] <- countOverlaps(GSE24447_hNPC_H3K4me1.low,get(hnpcs[i]))
hnpcEnhancers.high[,i] <- countOverlaps(GSE24447_hNPC_H3K4me1.high,get(hnpcs[i]))
}
png("hescEnhancers_low_venn.png")
vennDiagram(hescEnhancers.low)
dev.off()
png("hescEnhancers_high_venn.png")
vennDiagram(hescEnhancers.high)
dev.off()
png("hnpcEnhancers_low_venn.png")
vennDiagram(hnpcEnhancers.low)
dev.off()
png("hnpcEnhancers_high_venn.png")
vennDiagram(hnpcEnhancers.high)
dev.off()
#
## Processing Pax6 reads bed files
#
 cut -d' ' -f1-5 chn015.unique.bed > chn015.unique.trimmed.bed
 cut -d' ' -f1-5 chn021.unique.bed > chn021.unique.trimmed.bed
macs2 callpeak -t Pax6.NEC.unique.bed/chn021.unique.trimmed.bed -c Input.NEC.unique.bed/chn015.unique.trimmed.bed -f BED -g hs -n 20160124_Pax6 -B --nomodel --extsize 147
